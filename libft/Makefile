NAME = libft.a
CC = gcc
CFLAGS = -c -Wall -Wextra -Werror
OBJEKT = ft_memmove.o ft_memcpy.o ft_memchr.o ft_memcmp.o ft_bzero.o \
		 ft_memccpy.o ft_memset.o ft_strlen.o ft_strdup.o ft_strcpy.o \
		 ft_strncpy.o ft_strcat.o ft_strncat.o ft_strlcat.o ft_strchr.o \
		 ft_strrchr.o ft_strstr.o ft_strnstr.o ft_strcmp.o ft_strncmp.o \
		 ft_atoi.o ft_isalpha.o ft_isdigit.o ft_isalnum.o ft_isascii.o \
		 ft_isprint.o ft_toupper.o ft_tolower.o ft_memalloc.o ft_memdel.o \
		 ft_strnew.o ft_strdel.o ft_strclr.o ft_striter.o ft_striteri.o \
		 ft_strmap.o ft_strmapi.o ft_strequ.o ft_strnequ.o ft_strsub.o \
		 ft_strjoin.o ft_strtrim.o ft_strsplit.o ft_itoa.o ft_putchar.o \
		 ft_putstr.o ft_putendl.o ft_putnbr.o ft_putchar_fd.o ft_putstr_fd.o \
		 ft_putendl_fd.o ft_putnbr_fd.o ft_lstnew.o ft_lstdelone.o \
		 ft_lstdel.o ft_lstadd.o ft_lstiter.o ft_lstmap.o world.o \
		 long_world.o quantity_world.o ft_newtrim.o ft_size.o
all: $(NAME)
$(NAME): $(OBJEKT)
	ar rc $(NAME) $(OBJEKT)
ft_atoi.o:
	$(CC) $(CFLAGS) ft_atoi.c
ft_bzero.o:
	$(CC) $(CFLAGS) ft_bzero.c
ft_isalnum.o:
	$(CC) $(CFLAGS) ft_isalnum.c
ft_isalpha.o:
	$(CC) $(CFLAGS) ft_isalpha.c
ft_isascii.o:
	$(CC) $(CFLAGS) ft_isascii.c
ft_isdigit.o:
	$(CC) $(CFLAGS) ft_isdigit.c
ft_isprint.o:
	$(CC) $(CFLAGS) ft_isprint.c
ft_itoa.o:
	$(CC) $(CFLAGS) ft_itoa.c
ft_lstnew.o:
	$(CC) $(CFLAGS) ft_lstnew.c
ft_memalloc.o:
	$(CC) $(CFLAGS) ft_memalloc.c
ft_memccpy.o:
	$(CC) $(CFLAGS) ft_memccpy.c
ft_memchr.o:
	$(CC) $(CFLAGS) ft_memchr.c
ft_memcmp.o:
	$(CC) $(CFLAGS) ft_memcmp.c
ft_memcpy.o:
	$(CC) $(CFLAGS) ft_memcpy.c
ft_memdel.o:
	$(CC) $(CFLAGS) ft_memdel.c
ft_memmove.o:
	$(CC) $(CFLAGS) ft_memmove.c
ft_memset.o:
	$(CC) $(CFLAGS) ft_memset.c
ft_putchar.o:
	$(CC) $(CFLAGS) ft_putchar.c
ft_putchar_fd.o:
	$(CC) $(CFLAGS) ft_putchar_fd.c
ft_putendl.o:
	$(CC) $(CFLAGS) ft_putendl.c
ft_putendl_fd.o:
	$(CC) $(CFLAGS) ft_putendl_fd.c
ft_putnbr.o:
	$(CC) $(CFLAGS) ft_putnbr.c
ft_putnbr_fd.o:
	$(CC) $(CFLAGS) ft_putnbr_fd.c
ft_putstr.o:
	$(CC) $(CFLAGS) ft_putstr.c
ft_putstr_fd.o:
	$(CC) $(CFLAGS) ft_putstr_fd.c
ft_strcat.o:
	$(CC) $(CFLAGS) ft_strcat.c
ft_strchr.o:
	$(CC) $(CFLAGS) ft_strchr.c
ft_strclr.o:
	$(CC) $(CFLAGS) ft_strclr.c
ft_strcmp.o:
	$(CC) $(CFLAGS) ft_strcmp.c
ft_strcpy.o:
	$(CC) $(CFLAGS) ft_strcpy.c
ft_strdel.o:
	$(CC) $(CFLAGS) ft_strdel.c
ft_strdup.o:
	$(CC) $(CFLAGS) ft_strdup.c
ft_strequ.o:
	$(CC) $(CFLAGS) ft_strequ.c
ft_striter.o:
	$(CC) $(CFLAGS) ft_striter.c
ft_striteri.o:
	$(CC) $(CFLAGS) ft_striteri.c
ft_strjoin.o:
	$(CC) $(CFLAGS) ft_strjoin.c
ft_strlcat.o:
	$(CC) $(CFLAGS) ft_strlcat.c
ft_strlen.o:
	$(CC) $(CFLAGS) ft_strlen.c
ft_strmap.o:
	$(CC) $(CFLAGS) ft_strmap.c
ft_strmapi.o:
	$(CC) $(CFLAGS) ft_strmapi.c
ft_strncat.o:
	$(CC) $(CFLAGS) ft_strncat.c
ft_strncmp.o:
	$(CC) $(CFLAGS) ft_strncmp.c
ft_strncpy.o:
	$(CC) $(CFLAGS) ft_strncpy.c
ft_strnequ.o:
	$(CC) $(CFLAGS) ft_strnequ.c
ft_strnew.o:
	$(CC) $(CFLAGS) ft_strnew.c
ft_strnstr.o:
	$(CC) $(CFLAGS) ft_strnstr.c
ft_strrchr.o:
	$(CC) $(CFLAGS) ft_strrchr.c
ft_strsplit.o:
	$(CC) $(CFLAGS) ft_strsplit.c
ft_strstr.o:
	$(CC) $(CFLAGS) ft_strstr.c
ft_strsub.o:
	$(CC) $(CFLAGS) ft_strsub.c
ft_strtrim.o:
	$(CC) $(CFLAGS) ft_strtrim.c
ft_tolower.o:
	$(CC) $(CFLAGS) ft_tolower.c
ft_toupper.o:
	$(CC) $(CFLAGS) ft_toupper.c
ft_lstdelone.o:
	$(CC) $(CFLAGS) ft_lstdelone.c
ft_lstdel.o:
	$(CC) $(CFLAGS) ft_lstdel.c
ft_lstadd.o:
	$(CC) $(CFLAGS) ft_lstadd.c
ft_lstiter.o:
	$(CC) $(CFLAGS) ft_lstiter.c
ft_lstmap.o:
	$(CC) $(CFLAGS) ft_lstmap.c
world.o:
	$(CC) $(CFLAGS) world.c
long_world.o:
	$(CC) $(CFLAGS) long_world.c
quantity_world.o:
	$(CC) $(CFLAGS) quantity_world.c
ft_newtrim.o:
	$(CC) $(CFLAGS) ft_newtrim.c
ft_size.o:
	$(CC) $(CFLAGS) ft_size.c
clean:
	rm -f $(OBJEKT)	
fclean: clean
	rm -f $(NAME)
re: fclean all
